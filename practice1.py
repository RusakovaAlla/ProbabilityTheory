from math import factorial

#подготовим функцию
def combos(n, k):
    """
    :param n: из какого числа делаем выборку
    :param k: сколько выбираем
    :return: число исходов
    """
    return factorial(n) / (factorial(k) * factorial(n - k))

#Задача 1
"""Из колоды в 52 карты извлекаются случайным образом 4 карты. 
a) Найти вероятность того, что все карты – крести. 
б) Найти вероятность, что среди 4-х карт окажется хотя бы один туз.
"""
#Решение(a):
#1.найдем общее количество комбинаций по 4 карты из всех карт крести
crosses = combos(13, 4)
#2.найдем общее количество комбинаций по 4 карты из колоды
combosTotal = combos(52, 4)
#3.найдем вероятность выпадания нужного нам количества комбинаций
p = round(crosses/combosTotal*100, 2)
print(f"{'_'*10}Ответ к Задаче 1.а{'_'*10}")
print(f"Вероятность вытащить 4 карты крести из колоды 52 карты составляет {p}%")
print()
#Решение(б):
#1.найдем общее количество комбинаций с тузами
#, нас устроят исходы, когда в выборку попадают по 1, 2, 3 или 4 туза
aces = [combos(4, m) for m in range(1, 5)] #количество комбинаций карт с каждым количеством тузов
#2.найдем общее количество комбинаций остальнх карт в выборке, т.е. 3, 2, 1 ,0
otherCards = [combos(48, m) for m in range(3, -1, -1)]
#3.посчитаем общее количество вероятных благоприятных исходов
variants = list(zip(aces, otherCards))#соберем кортежи для дальнейших операций из комбинаций тузов и других карт
variants = sum([i[0]*i[1] for i in variants])
#4.расчитаем вероятность
p = round(variants/combosTotal*100, 2)
print(f"{'_'*10}Ответ к Задаче 1.б{'_'*10}")
print(f"Вероятность вытащить 4 карты c хотя бы одним тузом из колоды 52 карты составляет {p}%")
print()

#Задача 2
"""На входной двери подъезда установлен кодовый замок, содержащий десять кнопок с цифрами от 0 до 9. 
Код содержит три цифры, которые нужно нажать одновременно. 
Какова вероятность того, что человек, не знающий код, откроет дверь с первой попытки?"""
#Вариант расчета сочетаниями:
p = round(1/combos(10, 3)*100, 2)#благоприятный исход только 1, общее количество combos(10, 3)
#Вариант расчета вероятностью угадать каждую из цифр:
#Т.к. все цифры кода нажимаются одновременно и не повторяются в коде, то все цифры имеют одинаковую вероятность быть
# в составе кода, и вероятность перераспределяется между оставшимися цифрами
#Т.е. вероятность удагадать первую одну из цифр - 3/10, вторую - 2/9 (т.к. после угадывания первой выбирать остается
# только из 9 цифры, а вернух может быть только 2), третью - 1/8 соотстветсвенно
p1 = round(3/10*2/9*1/8*100, 2)
print(f"{'_'*10}Ответ к Задаче 2{'_'*10}")
print(f"Вероятность с первого раза нажать нужный код: {p}% (или {p1}%  для второго способа расчета)")
print()

#Задача 3
"""В ящике имеется 15 деталей, из которых 9 окрашены. 
Рабочий случайным образом извлекает 3 детали. 
Какова вероятность того, что все извлеченные детали окрашены?"""
#Вариант расчета сочетаниями
detailsCombos = combos(15, 3)#сколькими способами можем извлечь по 3 детали
paintedDetails = combos(9, 3)*combos(6, 0)
p = round(paintedDetails/detailsCombos*100, 2)
#или последовательно тащим детали - перемножаем веростности вытащить каждую деталь окрашенной
p1 = round(9/15*8/14*7/13*100, 2)
print(f"{'_'*10}Ответ к Задаче 3{'_'*10}")
print(f"Вероятность того, что все извлеченные детали окрашены: {p}% (или {p1}%  для второго способа расчета)", )
print()

#Задача4
"""В лотерее 100 билетов. 
Из них 2 выигрышных. 
Какова вероятность того, что 2 приобретенных билета окажутся выигрышными?"""
#сочетания
p = round(combos(2, 2)*combos(98, 0)/combos(100, 2)*100, 2)
#или решим, перемножая веростность вытащить выигрышные билеты, как зависимых событий
p1 = round(2/100*1/99*100, 2)
print(f"{'_'*10}Ответ к Задаче 4{'_'*10}")
print(f"Вероятность того, что 2 приобретенных билета окажутся выигрышными: {p}% (или {p1}%  для второго способа расчета)")
print()
